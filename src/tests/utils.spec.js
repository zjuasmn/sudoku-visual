import { blockIndex, puzzleToString, stringToPuzzle } from '../utils';
import { expect } from 'chai';

const s =
  '094080020\n' +
  '060007000\n' +
  '700000003\n' +
  '430050900\n' +
  '020000010\n' +
  '006090034\n' +
  '600000001\n' +
  '000700050\n' +
  '080030690';

const s2 = [
  '-341---6-',
  '--94-8---',
  '7-16--49-',
  '-28-3--4-',
  '39-----25',
  '-7--6-18-',
  '-13--25-4',
  '---3-68--',
  '-8---163-',
].join('\n').replace(/-/g, '0');

const puzzle = [
  [0, 9, 4, 0, 8, 0, 0, 2, 0],
  [0, 6, 0, 0, 0, 7, 0, 0, 0],
  [7, 0, 0, 0, 0, 0, 0, 0, 3],
  [4, 3, 0, 0, 5, 0, 9, 0, 0],
  [0, 2, 0, 0, 0, 0, 0, 1, 0],
  [0, 0, 6, 0, 9, 0, 0, 3, 4],
  [6, 0, 0, 0, 0, 0, 0, 0, 1],
  [0, 0, 0, 7, 0, 0, 0, 5, 0],
  [0, 8, 0, 0, 3, 0, 6, 9, 0]];

const puzzle2 = [
  [0, 3, 4, 1, 0, 0, 0, 6, 0],
  [0, 0, 9, 4, 0, 8, 0, 0, 0],
  [7, 0, 1, 6, 0, 0, 4, 9, 0],
  [0, 2, 8, 0, 3, 0, 0, 4, 0],
  [3, 9, 0, 0, 0, 0, 0, 2, 5],
  [0, 7, 0, 0, 6, 0, 1, 8, 0],
  [0, 1, 3, 0, 0, 2, 5, 0, 4],
  [0, 0, 0, 3, 0, 6, 8, 0, 0],
  [0, 8, 0, 0, 0, 1, 6, 3, 0],
];
describe('utils', () => {
  it('works', () => {
    expect(puzzleToString(puzzle)).to.equal(s);
    expect(stringToPuzzle(s)).to.deep.equal(puzzle);
    expect(stringToPuzzle(s2)).to.deep.equal(puzzle2);
  });
  it('blockIndex works', () => {
    expect(blockIndex(3, 3)).to.equal(4);
  });
});